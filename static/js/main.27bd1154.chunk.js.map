{"version":3,"sources":["components/Header.js","components/Spinner.js","components/PokemonCard.js","components/PokemonArray.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Header","src","width","alt","Spinner","className","PokemonCard","name","url","TYPE_COLOR","normal","fire","water","grass","electric","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","useState","pokemonIndex","setPokemonIndex","imageUrl","setImageUrl","pokemonType1","setPokemonType1","pokemonType2","setPokemonType2","loading","setLoading","useEffect","a","axios","get","then","res","split","length","data","types","type","console","log","fetchData","toLowerCase","map","s","charAt","toUpperCase","substring","join","style","backgroundColor","color","borderRadius","border","padding","margin","textShadow","PokemonArray","props","pokemonArray","pokemon","Pagination","nextPage","prevPage","onClick","App","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","setPokemonArray","cancel","cancelToken","CancelToken","c","next","previous","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27bd1154.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    \r\n    return (\r\n        <header>\r\n            <img src=\"https://cdn.pixabay.com/photo/2016/09/29/12/55/pokemon-1702772_1280.png\"\r\n            width=\"60px\" alt=\"logo\"/>\r\n            <span>\r\n                <h2>Simple React Pokédex</h2>\r\n            </span>\r\n            <h4>Showcasing use of PokéAPI</h4>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","const Spinner = () => {\r\n\r\n    return (\r\n      <div className=\"Spinner\">\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Spinner","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from './Spinner';\r\n\r\nconst PokemonCard = ({ name, url }) => {\r\n\r\n    const TYPE_COLOR = {\r\n        normal: 'a39a87',\r\n        fire: 'f08e4d',\r\n        water: '7dabe3',\r\n        grass: '53c959',\r\n        electric: 'ebdb52',\r\n        ice: '9ad8d9',\r\n        fighting: 'ab290f',\r\n        poison: '85417e',\r\n        ground: 'dbbd7d',\r\n        flying: 'b2b2ed',\r\n        psychic: 'f76da9',\r\n        bug: '9fb844',\r\n        rock: 'b0a051',\r\n        ghost: '654d75',\r\n        dragon: '6f15d6',\r\n        dark: '423f3b',\r\n        steel: 'c7c2d1',\r\n        fairy: 'ffc2f2'\r\n      };\r\n    \r\n    const [pokemonIndex, setPokemonIndex] = useState([])\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const [pokemonType1, setPokemonType1] = useState('')\r\n    const [pokemonType2, setPokemonType2] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n \r\n   useEffect (() => {\r\n     async function fetchData() {\r\n     try {\r\n      setLoading(true)\r\n      await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonIndex}`)\r\n      .then(res => {\r\n        setLoading(false)\r\n        setPokemonIndex(url.split('/')[url.split('/').length - 2]);\r\n        setImageUrl(`https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${pokemonIndex}.png?raw=true`)\r\n        setPokemonType1(res.data.types[0].type.name)\r\n        setPokemonType2(res.data.types[1].type.name)\r\n      })\r\n     } catch (error) {\r\n       console.log(error)\r\n       setLoading(false)\r\n     }\r\n    }\r\n    fetchData()\r\n  }, [pokemonIndex, url])\r\n\r\n    return (\r\n        <div className=\"PokemonCard\">\r\n          \r\n            <div className=\"header\">\r\n                <b>#{pokemonIndex}</b> {name.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')} \r\n            </div>\r\n            {loading ? <Spinner />: \r\n            <div className=\"body\">\r\n                <div className=\"sprite\">\r\n                    <img \r\n                    src={imageUrl} \r\n                    alt={name+\" sprite\"}\r\n                    width='110px'/>\r\n                </div>\r\n                <div className=\"type\">\r\n                  {pokemonType1 ? \r\n                    <span\r\n                    alt={pokemonType1+\" type\"}\r\n                    key={pokemonType1} \r\n                    style={{backgroundColor: `#${TYPE_COLOR[pokemonType1]}`, color: 'white', borderRadius: '7px', border: '2px solid #dedede', padding: '0px 3px 2px 3px', margin: '1px', textShadow: '1px 1px 1px #505050'}}>\r\n                    {pokemonType1.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}\r\n                    </span>\r\n                    : null}\r\n                  {pokemonType2 ?\r\n                    <span\r\n                    alt={pokemonType2+\" type\"}\r\n                    key={pokemonType2} \r\n                    style={{backgroundColor: `#${TYPE_COLOR[pokemonType2]}`, color: 'white', borderRadius: '7px', border: '2px solid #dedede', padding: '0px 3px 2px 3px', margin: '1px', textShadow: '1px 1px 1px #505050'}}>\r\n                     {pokemonType2.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')} \r\n                    </span> \r\n                    : null}\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    ) \r\n  } \r\n\r\nexport default PokemonCard","import PokemonCard from './PokemonCard';\r\n \r\nconst PokemonArray = ( props ) => {\r\n\r\n    return (\r\n      <div className=\"PokemonArray\">\r\n        {props.pokemonArray.map(pokemon => (\r\n          <PokemonCard name={pokemon.name} url={pokemon.url} key={pokemon.name} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default PokemonArray","import React from 'react'\r\n\r\nconst Pagination = ({ nextPage, prevPage }) => {\r\n  return (\r\n    <div className=\"Pagination\">\r\n      {prevPage && <button onClick={prevPage}>Previous</button>}\r\n      {nextPage && <button onClick={nextPage}>Next</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Header from './components/Header'\r\nimport PokemonArray from './components/PokemonArray';\r\nimport Pagination from './components/Pagination';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon\")\r\n  const [nextPageUrl, setNextPageUrl] = useState()\r\n  const [prevPageUrl, setPrevPageUrl] = useState()\r\n  const [pokemonArray, setPokemonArray] = useState([])\r\n  \r\n    useEffect(() => {\r\n      let cancel\r\n      axios.get(currentPageUrl, {\r\n        cancelToken: new axios.CancelToken(c => cancel = c)\r\n      }).then(res => {\r\n        setNextPageUrl(res.data.next)\r\n        setPrevPageUrl(res.data.previous)\r\n        setPokemonArray(res.data['results'])\r\n      })\r\n      return () => cancel()\r\n    }, [currentPageUrl])\r\n\r\n    function nextPage() {\r\n      setCurrentPageUrl(nextPageUrl)\r\n    }\r\n  \r\n    function prevPage() {\r\n      setCurrentPageUrl(prevPageUrl)\r\n    }\r\n  \r\n      return(\r\n    <div className=\"App\">\r\n      <Header />\r\n      <PokemonArray pokemonArray={pokemonArray}/>\r\n      <Pagination\r\n        nextPage={nextPageUrl ? nextPage : null}\r\n        prevPage={prevPageUrl ? prevPage : null}\r\n      />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}